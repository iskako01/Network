{"version":3,"file":"static/js/537.4eef23a7.chunk.js","mappings":"4MACA,EAAwB,qB,6BCMlBA,EAAY,SAACC,GACjB,OAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WALNC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,SACaC,EAJf,EAIEC,UAAaD,OAWf,OACE,kBAAME,SAAUJ,GAPD,SAACK,GAChBT,EAAMU,MAAMD,EAAKE,MAAOF,EAAKG,SAAUH,EAAKI,YAE5CR,EAAS,WAAY,CAAES,QAASd,EAAMe,cAItC,WACE,0BACE,4BACMZ,EAAS,QAAS,CACpBa,UAAU,EACVC,UAAW,SAIhBX,EAAOK,QACN,iBAAMO,UAAWC,EAAjB,iCAEF,0BACE,0BAAOC,KAAK,YAAejB,EAAS,WAAY,CAAEa,UAAU,QAE7DV,EAAOM,WACN,iBAAMM,UAAWC,EAAjB,oCAEF,0CAEE,0BAAOC,KAAK,YAAejB,EAAS,oBAEtC,0BACE,mBAAQiB,KAAK,SAAb,qBAEDd,EAAOS,WAAY,gBAAKG,UAAWC,EAAhB,SAAgCnB,EAAMe,eAwBhE,GAAeM,EAAAA,EAAAA,KAPS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,KAAKD,OACnBR,SAAUO,EAAME,KAAKT,YAIe,CAAEL,MAAAA,EAAAA,IAA1C,EAnBc,SAACV,GACb,OAAIA,EAAMuB,QACD,SAAC,KAAD,CAAUE,GAAI,cAGrB,iBAAKP,UAAU,QAAf,WACE,mCAEA,SAACnB,GAAD,UAAeC","sources":["webpack://first-project/./src/components/login/Login.module.css?3966","components/login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"Login_error__N+lsJ\"};","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./Login.module.css\";\r\nimport { login } from \"../../redux/redusers/authReduser\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    props.login(data.email, data.password, data.rememberMe);\r\n\r\n    setError(\"errorApi\", { message: props.errorApi });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <div>\r\n        <input\r\n          {...register(\"email\", {\r\n            required: true,\r\n            maxLength: 20,\r\n          })}\r\n        />\r\n      </div>\r\n      {errors.email && (\r\n        <span className={classes.error}>Email is required.</span>\r\n      )}\r\n      <div>\r\n        <input type=\"password\" {...register(\"password\", { required: true })} />\r\n      </div>\r\n      {errors.password && (\r\n        <span className={classes.error}>Password is required.</span>\r\n      )}\r\n      <div>\r\n        Remember me\r\n        <input type=\"checkbox\" {...register(\"rememberMe\")} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Login</button>\r\n      </div>\r\n      {errors.errorApi && <div className={classes.error}>{props.errorApi}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Login = (props) => {\r\n  if (props.isAuth) {\r\n    return <Navigate to={\"/profile\"} />;\r\n  }\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n\r\n      <LoginForm {...props} />\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n    errorApi: state.auth.errorApi,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"names":["LoginForm","props","useForm","mode","register","handleSubmit","setError","errors","formState","onSubmit","data","login","email","password","rememberMe","message","errorApi","required","maxLength","className","classes","type","connect","state","isAuth","auth","to"],"sourceRoot":""}